{"ast":null,"code":"var _jsxFileName = \"/Users/drewharnedy/Documents/USFCodingBootcamp/React-Router_and_React_History/react-router-dogfinder/color-factory/src/components/ColorForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ColorForm = () => {\n  _s();\n  const history = useHistory();\n  const [name, setName] = useState('');\n  const [hex, setHex] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Handle form submission logic (e.g., sending data to backend or updating state)\n    // For demonstration, you can update a list of colors in state (or send data to API)\n    // Mock data for demonstration\n    const newColor = {\n      name,\n      hex\n    }; // Assuming you have form input fields for 'name' and 'hex'\n    console.log('New Color:', newColor);\n\n    // Redirect to colors index after submission\n    history.push('/colors');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a New Color\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"hex\",\n          children: \"Hex Value:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          id: \"hex\",\n          value: hex,\n          onChange: e => setHex(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(ColorForm, \"Pz9tYyJBn5r8f9RzUcflkN7ZuhQ=\", false, function () {\n  return [useHistory];\n});\n_c = ColorForm;\nexport default ColorForm;\nvar _c;\n$RefreshReg$(_c, \"ColorForm\");","map":{"version":3,"names":["React","useState","useHistory","jsxDEV","_jsxDEV","ColorForm","_s","history","name","setName","hex","setHex","handleSubmit","e","preventDefault","newColor","console","log","push","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/Users/drewharnedy/Documents/USFCodingBootcamp/React-Router_and_React_History/react-router-dogfinder/color-factory/src/components/ColorForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst ColorForm = () => {\n  const history = useHistory();\n  const [name, setName] = useState('');\n  const [hex, setHex] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Handle form submission logic (e.g., sending data to backend or updating state)\n    // For demonstration, you can update a list of colors in state (or send data to API)\n    // Mock data for demonstration\n    const newColor = { name, hex }; // Assuming you have form input fields for 'name' and 'hex'\n    console.log('New Color:', newColor);\n\n    // Redirect to colors index after submission\n    history.push('/colors');\n  };\n\n  return (\n    <div>\n      <h2>Add a New Color</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"name\">Name:</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"hex\">Hex Value:</label>\n          <input\n            type=\"color\"\n            id=\"hex\"\n            value={hex}\n            onChange={(e) => setHex(e.target.value)}\n            required\n          />\n        </div>\n        <button type=\"submit\">Add Color</button>\n      </form>\n    </div>\n  );\n};\n\nexport default ColorForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,OAAO,GAAGL,UAAU,CAAC,CAAC;EAC5B,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,GAAG,EAAEC,MAAM,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAElC,MAAMW,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACA;IACA;IACA,MAAMC,QAAQ,GAAG;MAAEP,IAAI;MAAEE;IAAI,CAAC,CAAC,CAAC;IAChCM,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEF,QAAQ,CAAC;;IAEnC;IACAR,OAAO,CAACW,IAAI,CAAC,SAAS,CAAC;EACzB,CAAC;EAED,oBACEd,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBnB,OAAA;MAAMoB,QAAQ,EAAEZ,YAAa;MAAAO,QAAA,gBAC3Bf,OAAA;QAAAe,QAAA,gBACEf,OAAA;UAAOqB,OAAO,EAAC,MAAM;UAAAN,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnCnB,OAAA;UACEsB,IAAI,EAAC,MAAM;UACXC,EAAE,EAAC,MAAM;UACTC,KAAK,EAAEpB,IAAK;UACZqB,QAAQ,EAAGhB,CAAC,IAAKJ,OAAO,CAACI,CAAC,CAACiB,MAAM,CAACF,KAAK,CAAE;UACzCG,QAAQ;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNnB,OAAA;QAAAe,QAAA,gBACEf,OAAA;UAAOqB,OAAO,EAAC,KAAK;UAAAN,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACvCnB,OAAA;UACEsB,IAAI,EAAC,OAAO;UACZC,EAAE,EAAC,KAAK;UACRC,KAAK,EAAElB,GAAI;UACXmB,QAAQ,EAAGhB,CAAC,IAAKF,MAAM,CAACE,CAAC,CAACiB,MAAM,CAACF,KAAK,CAAE;UACxCG,QAAQ;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNnB,OAAA;QAAQsB,IAAI,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACjB,EAAA,CA7CID,SAAS;EAAA,QACGH,UAAU;AAAA;AAAA8B,EAAA,GADtB3B,SAAS;AA+Cf,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}